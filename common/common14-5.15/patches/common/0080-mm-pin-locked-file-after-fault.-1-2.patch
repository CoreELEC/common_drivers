From 746fdaa2592cd56cba55ad0b55c8090b253880c3 Mon Sep 17 00:00:00 2001
From: Jianxiong Pan <jianxiong.pan@amlogic.com>
Date: Wed, 23 Nov 2022 09:05:40 +0800
Subject: [PATCH 80/95] mm: pin locked file after fault. [1/2]

PD#SWPL-99264

Problem:
If we pin a file in android, the whole data of this file
will be loaded to DDR, but most of these data may not be
used, this caused memory waste.

Solution:
when pinning a file, do not load the file,
only wait until a page fault occurs later to load it.

Verify:
s4_aq222.

Change-Id: Ife507989e0233332579bd8df072ac105d9683daf
Signed-off-by: Jianxiong Pan <jianxiong.pan@amlogic.com>
---
 mm/memory.c | 17 +++++++++++++++++
 mm/mlock.c  |  4 ++++
 2 files changed, 21 insertions(+)

diff --git a/mm/memory.c b/mm/memory.c
index 96dd89563f55..cd8de40cf4d6 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -86,6 +86,9 @@
 #ifdef CONFIG_AMLOGIC_PIN_LOCKED_FILE
 #include <linux/amlogic/pin_file.h>
 #endif
+#ifdef CONFIG_AMLOGIC_MEM_DEBUG
+#include <linux/amlogic/mem_debug.h>
+#endif
 
 #include "pgalloc-track.h"
 #include "internal.h"
@@ -5002,7 +5005,14 @@ static vm_fault_t __handle_mm_fault(struct vm_area_struct *vma,
 
 		speculative_page_walk_end();
 
+#ifdef CONFIG_AMLOGIC_MEM_DEBUG
+		ret = handle_pte_fault(&vmf);
+		if (!ret && vma->vm_flags & VM_LOCKED)
+			mlock_fault_size++;
+		return ret;
+#else
 		return handle_pte_fault(&vmf);
+#endif
 
 	spf_fail:
 		speculative_page_walk_end();
@@ -5138,7 +5148,14 @@ static vm_fault_t __handle_mm_fault(struct vm_area_struct *vma,
 	}
 	return ret;
 #endif
+#ifdef CONFIG_AMLOGIC_MEM_DEBUG
+	ret = handle_pte_fault(&vmf);
+	if (!ret && vma->vm_flags & VM_LOCKED)
+		mlock_fault_size++;
+	return ret;
+#else
 	return handle_pte_fault(&vmf);
+#endif
 }
 
 /**
diff --git a/mm/mlock.c b/mm/mlock.c
index 7ff77190e4f9..1bd2a1f8dc19 100644
--- a/mm/mlock.c
+++ b/mm/mlock.c
@@ -195,6 +195,7 @@ unsigned int munlock_vma_page(struct page *page)
 /*
  * convert get_user_pages() return value to posix mlock() error
  */
+#ifndef CONFIG_AMLOGIC_PIN_LOCKED_FILE_V2
 static int __mlock_posix_error_return(long retval)
 {
 	if (retval == -EFAULT)
@@ -203,6 +204,7 @@ static int __mlock_posix_error_return(long retval)
 		retval = -EAGAIN;
 	return retval;
 }
+#endif
 
 /*
  * Prepare page for fast batched LRU putback via putback_lru_evictable_pagevec()
@@ -691,9 +693,11 @@ static __must_check int do_mlock(unsigned long start, size_t len, vm_flags_t fla
 	if (error)
 		return error;
 
+#ifndef CONFIG_AMLOGIC_PIN_LOCKED_FILE_V2
 	error = __mm_populate(start, len, 0);
 	if (error)
 		return __mlock_posix_error_return(error);
+#endif
 	return 0;
 }
 
-- 
2.25.1

