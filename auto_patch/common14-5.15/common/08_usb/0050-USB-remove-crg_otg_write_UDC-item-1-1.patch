From 58efe54a90a3e2f0e77bb99657a7bb2042dc6b6d Mon Sep 17 00:00:00 2001
From: qi duan <qi.duan@amlogic.com>
Date: Wed, 21 Sep 2022 18:10:22 +0800
Subject: [PATCH 50/95] USB: remove crg_otg_write_UDC item [1/1]

PD#SWPL-94449

Problem:
remove amlogic usb item for gki

Solution:
remove amlogic usb item for gki

Verify:
ah212 aw419

Signed-off-by: qi duan <qi.duan@amlogic.com>
Change-Id: Ib2b5e3a0eab5cc2dc73e6cbaa8c2ecf3b557b9a1
---
 drivers/usb/core/message.c    |  8 -----
 drivers/usb/gadget/configfs.c | 55 -----------------------------------
 2 files changed, 63 deletions(-)

diff --git a/drivers/usb/core/message.c b/drivers/usb/core/message.c
index 7949ade0ef84..10b25176e54a 100644
--- a/drivers/usb/core/message.c
+++ b/drivers/usb/core/message.c
@@ -2167,14 +2167,6 @@ int usb_set_configuration(struct usb_device *dev, int configuration)
 			intf->cur_altsetting->desc.bInterfaceNumber);
 		device_enable_async_suspend(&intf->dev);
 		ret = device_add(&intf->dev);
-#if IS_ENABLED(CONFIG_AMLOGIC_COMMON_USB)
-		if (!intf->dev.driver) {
-			if (intf->cur_altsetting->desc.bInterfaceClass == 0x09)
-				dev_err(&dev->dev, "Unsupported the hub\n");
-			else
-				dev_err(&dev->dev, "Unsupported device\n");
-		}
-#endif
 		if (ret != 0) {
 			dev_err(&dev->dev, "device_add(%s) --> %d\n",
 				dev_name(&intf->dev), ret);
diff --git a/drivers/usb/gadget/configfs.c b/drivers/usb/gadget/configfs.c
index 33a507df0dc5..66885e28a195 100644
--- a/drivers/usb/gadget/configfs.c
+++ b/drivers/usb/gadget/configfs.c
@@ -25,10 +25,6 @@ static struct device *android_device;
 static int index;
 static int gadget_index;
 
-#ifdef CONFIG_AMLOGIC_COMMON_USB
-static struct gadget_info *gi_backup;
-#endif
-
 struct device *create_function_device(char *name)
 {
 	if (android_device && !IS_ERR(android_device))
@@ -1873,10 +1869,6 @@ static struct config_group *gadgets_make(
 	if (android_device_create(gi) < 0)
 		goto err;
 
-#ifdef CONFIG_AMLOGIC_COMMON_USB
-	gi_backup = gi;
-#endif
-
 	return &gi->group;
 
 err:
@@ -1923,53 +1915,6 @@ void unregister_gadget_item(struct config_item *item)
 }
 EXPORT_SYMBOL_GPL(unregister_gadget_item);
 
-#ifdef CONFIG_AMLOGIC_COMMON_USB
-int crg_otg_write_UDC(const char *udc_name)
-{
-	struct gadget_info *gi = gi_backup;
-	char *name;
-	int ret;
-	size_t len;
-
-	if (!gi)
-		return -ENOMEM;
-	len = strlen(udc_name);
-
-	name = kstrdup(udc_name, GFP_KERNEL);
-	if (!name)
-		return -ENOMEM;
-	if (name[len - 1] == '\n')
-		name[len - 1] = '\0';
-
-	mutex_lock(&gi->lock);
-
-	if (!strlen(name) || strcmp(name, "none") == 0) {
-		ret = unregister_gadget(gi);
-		if (ret)
-			goto err;
-		kfree(name);
-	} else {
-		if (gi->composite.gadget_driver.udc_name) {
-			ret = -EBUSY;
-			goto err;
-		}
-		gi->composite.gadget_driver.udc_name = name;
-		ret = usb_gadget_probe_driver(&gi->composite.gadget_driver);
-		if (ret) {
-			gi->composite.gadget_driver.udc_name = NULL;
-			goto err;
-		}
-	}
-	mutex_unlock(&gi->lock);
-	return 0;
-err:
-	kfree(name);
-	mutex_unlock(&gi->lock);
-	return ret;
-}
-EXPORT_SYMBOL_GPL(crg_otg_write_UDC);
-#endif
-
 static int __init gadget_cfs_init(void)
 {
 	int ret;
-- 
2.25.1

