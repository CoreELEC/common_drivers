// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2019 Amlogic, Inc. All rights reserved.
 */

/dts-v1/;

#include "meson-c2.dtsi"
#include "partition_normal_linux.dtsi"

/ {
	compatible = "amlogic,c2";
	model = "Amlogic Meson C2-C305X-AF400";

	aliases {
		serial0 = &uart_B;
		serial1 = &uart_A;
		serial2 = &uart_C;
		serial3 = &uart_D;
		serial4 = &uart_E;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
		i2c4 = &i2c4;
		spi0 = &spifc;
		spi1 = &spicc0;
		spi2 = &spicc1;
		tsensor0 = &tsensor;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	memory@0 {
		device_type = "memory";
		linux,usable-memory = <0x0 0x0 0x0 0x80000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;
		secmon_reserved:linux,secmon {
			compatible = "shared-dma-pool";
			/*reusable;*/
			no-map;
			size = <0x0 0x400000>;
			alignment = <0x0 0x400000>;
			alloc-ranges = <0x0 0x05000000 0x0 0x400000>;
		};

		ion_cma_reserved:linux,ion-dev {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x6400000>;
			alignment = <0x0 0x400000>;
		};

		rtos_reserved:linux,rtos_reserved {
			compatible = "amlogic, aml_rtos_memory";
			status = "okay";
			size = <0x0 0x200000>;
			alloc-ranges = <0x0 0x4800000 0x0 0x200000>;
			no-map;
		};

		dsp_fw_reserved:linux,dsp_fw {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x800000>;
			alignment = <0x0 0x400000>;
			alloc-ranges = <0x0 0x3400000 0x0 0x800000>;
		};

		/*dsp_shm_reserved:linux,dsp_shm {      */
		/*	compatible = "dspshmem";            */
		/*	reg = <0x0 0x40820000 0x0 0x80000>; */
		/*	size = <0x80000>;                   */
		/*};*/

		autocap_reserved:linux,autocap_reserved {
			compatible = "amlogic, aml_autocap_memory";
			status = "okay";
			size = <0x0 0x4000000>;
			alloc-ranges = <0x0 0x40000000 0x0 0x4000000>;
		};

		ramoops@0x07400000 {
			compatible = "ramoops";
			reg = <0x0 0x07400000 0x0 0x00100000>;
			record-size = <0x20000>;
			console-size = <0x20000>;
			ftrace-size = <0x80000>;
			pmsg-size = <0x0>;
			no-map;
		};

		isp_cma_reserved:linux,isp_cma {
			compatible = "shared-dma-pool";
			reusable;
			status = "okay";
			size = <0x0 0x6000000>;
			alignment = <0x0 0x400000>;
		};

		adapt_cma_reserved:linux,adapt_cma {
			compatible = "shared-dma-pool";
			reusable;
			status = "okay";
			size = <0x0 0xC00000>;
		};
		codec_mm_cma:linux,codec_mm_cma {
			compatible = "shared-dma-pool";
			reusable;
			/* ion_codec_mm max can alloc size 80M*/
			size = <0x0 0xb000000>;
			alignment = <0x0 0x400000>;
			linux,contiguous-region;
		};
		/* codec shared reserved */
		codec_mm_reserved:linux,codec_mm_reserved {
			compatible = "amlogic, codec-mm-reserved";
			size = <0x0 0x0>;
			alignment = <0x0 0x100000>;
			//no-map;
		};
		gdc_cma_reserved:linux,gdc_cma {
			compatible = "shared-dma-pool";
			reusable;
			status = "disabled";
			size = <0x0 0x04000000>;
			alignment = <0x0 0x400000>;
		};

		jpegenc_cma_reserved:linux,jpegenc_cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0 0x2400000>;
			alignment = <0x0 0x400000>;
		};
	};

	free_reserved {
		compatible = "amlogic, free_reserved";
		memory-region = <&autocap_reserved>;
		status = "okay";
	};

	codec_mm {
		compatible = "amlogic, codec, mm";
		memory-region = <&codec_mm_cma &codec_mm_reserved>;
		dev_name = "codec_mm";
		status = "okay";
	};

	sensor: sensor {
		compatible = "soc, sensor";
		status = "okay";
		sensor-name = "imx335"; /*imx290;os08a10;imx227*/
		pinctrl-names= "default";
		clocks = <&clkc CLKID_GP_PLL_MCLK1_GATE>;
		clock-names = "mclk_0";
		reset = <&gpio GPIOM_11 GPIO_ACTIVE_HIGH>;
		pwdn = <&gpio GPIOM_10 GPIO_ACTIVE_HIGH>;
	};

	iq: iq {
		compatible = "soc, iq";
		status = "okay";
		sensor-name = "imx335"; /*imx290;os08a10;imx227*/
	};

	lens: lens {
		compatible = "soc, lens";
		status = "okay";
	};

	ircut: ircut {
		compatible = "amlogic, aml-ircut";
		status = "okay";
		ircut-gpio = <&gpio GPIOA_10 GPIO_ACTIVE_HIGH
				&gpio GPIOA_12 GPIO_ACTIVE_HIGH>;
		ircut-sequence = "init: 1=1,w=200,1=0,w=1000,0=1,w=200,0=0,w=1000",
				"enable: 1=1,w=200,1=0,w=1000,0=0",
				"disable: 0=1,w=200,0=0,w=1000,1=0";
	};

	sdcard_power: regulator-sdcard {
		compatible = "regulator-fixed";
		regulator-name = "SDCARD_POWER";
		vin-supply = <&vddao3v3_reg>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio GPIOD_13 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
	};

	vddio_card: gpio-regulator {
		compatible = "regulator-gpio";
		regulator-name = "VDDIO_CARD";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio GPIOE_2 GPIO_ACTIVE_HIGH>;
		gpios-states = <1>;

		/* Based on P200 schematics, signal CARD_1.8V/3.3V_CTR */
		states = <1800000 1
			  3300000 0>;
	};

	aml_enc {
		compatible = "cnm, MultiEnc";
		dev_name = "amvenc_multi";
		status = "okay";
		config_mm_sz_mb = <256>;
		power-domains = <&pwrdm PDID_CX_WAVE>;
		clocks = <&clkc CLKID_SYS_DOS
			&clkc CLKID_DOS_APB
			&clkc CLKID_WAVE_A_GATE
			&clkc CLKID_WAVE_B_GATE
			&clkc CLKID_WAVE_C_GATE>;
		clock-names = "clk_dos",
			"clk_apb_dos",
			"clk_MultiEnc_A",
			"clk_MultiEnc_B",
			"clk_MultiEnc_C";
		interrupts = <0 58 1
			0 59 1>;
		interrupt-names = "multienc_irq",
			"multienc_idle_irq";
		#address-cells=<2>;
		#size-cells=<2>;
		ranges;
		io_reg_base {
			reg = <0x0 0xfe070000 0x0 0x10000>;
		};
	};
	/* Audio Related start */
	dummy_codec:dummy_codec{
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml_dummy_codec";
		status = "okay";
	};

	a1_codec:a1_codec {
		#sound-dai-cells = <0>;
		compatible = "amlogic, c2_acodec";
		status = "okay";
		reg = <0x0 0xFE004800 0x0 0x20>;
		tdmout_index = <1>;
		tdmin_index = <1>;
		dat0_ch_sel = <0>;
		dacr_output_inv = <0>;
		power-domains = <&pwrdm PDID_CX_ACODEC>;
	};

	auge_sound {
		compatible = "amlogic, a1-sound-card";
		aml-audio-card,name = "AML-AUGESOUND";

		/*avout mute gpio*/
		avout_mute-gpios = <&gpio GPIOD_11 GPIO_ACTIVE_HIGH>;

		aml-audio-card,dai-link@0 {
			format = "dsp_a";
			mclk-fs = <512>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdma>;
			frame-master = <&tdma>;
			/* slave mode */
			/*
			 * bitclock-master = <&tdmacodec>;
			 * frame-master = <&tdmacodec>;
			 */
			suffix-name = "alsaPORT-pcm";
			tdmacpu: cpu {
				sound-dai = <&tdma>;
				dai-tdm-slot-tx-mask =
							<1 1 1 1 1 1 1 1>;
				dai-tdm-slot-rx-mask =
							<1 1 1 1 1 1 1 1>;
				dai-tdm-slot-num = <8>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <24576000>;
			};
			tdmacodec: codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@1 {
			format = "i2s";// "dsp_a";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdmb>;
			frame-master = <&tdmb>;
			/* slave mode */
			//bitclock-master = <&tdmbcodec>;
			//frame-master = <&tdmbcodec>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-i2s";
			tdmbcpu: cpu {
				sound-dai = <&tdmb>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <0 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <1155072000>;
			};
			tdmbcodec: codec {
				sound-dai = <&a1_codec>;
			};
		};

#if 0
		aml-audio-card,dai-link@2 {
			format = "i2s";// "dsp_a";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdmlb>;
			frame-master = <&tdmlb>;
			/* slave mode */
			//bitclock-master = <&tdmlbcodec>;
			//frame-master = <&tdmlbcodec>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-i2s";
			cpu {
				sound-dai = <&tdmlb>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			tdmlbcodec: codec {
				sound-dai = <&dummy_codec>;
			};
		};
#endif

		aml-audio-card,dai-link@2 {
			mclk-fs = <64>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-pdm";
			cpu {
				sound-dai = <&pdm>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@4 {
			mclk-fs = <256>;
			continuous-clock;
			suffix-name = "alsaPORT-loopback";
			cpu {
				sound-dai = <&loopback>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};
	};
	audiolocker: locker {
		compatible = "amlogic, audiolocker";
		clocks = <&clkaudio CLKID_AUDIO_LOCKER_OUT
				&clkaudio CLKID_AUDIO_LOCKER_IN
				&clkaudio CLKID_AUDIO_MCLK_C
				&clkaudio CLKID_AUDIO_MCLK_D
				&clkc CLKID_FCLK_DIV2
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "lock_out", "lock_in", "out_src",
					"in_src", "out_calc", "in_ref";
		interrupts = <GIC_SPI 42 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "irq";
		frequency = <49000000>; /* pll */
		dividor = <49>; /* locker's parent */
		power-domains = <&pwrdm PDID_CX_AUDIO>;
		status = "okay";
	};
	/* Audio Related end */
/* to check
 *	wifivbat_power: regulator-wifivbat {
 *		compatible = "regulator-fixed";
 *		regulator-name = "WIFIVBAT_POWER";
 *		vin-supply = <&vddao3v3_reg>;
 *		regulator-min-microvolt = <3300000>;
 *		regulator-max-microvolt = <3300000>;
 *		gpio = <&gpio GPIOD_13 GPIO_ACTIVE_HIGH>;
 *		enable-active-high;
 *		regulator-boot-on;
 *		regulator-always-on;
 *	};
 *
 *	vddio_wf: regulator_wfio {
 *		compatible = "regulator-fixed";
 *		regulator-name = "VDDIO_WF";
 *		vin-supply = <&vddao1v8_reg>;
 *		regulator-min-microvolt = <1800000>;
 *		regulator-max-microvolt = <1800000>;
 *		regulator-boot-on;
 *		regulator-always-on;
 *	};
 */

	unifykey {
		compatible = "amlogic,unifykey";
		status = "okay";

		unifykey-num = <2>;
		unifykey-index-0 = <&keysn_0>;
		unifykey-index-1 = <&keysn_1>;
		keysn_0: key_0{
			key-name = "usid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_1:key_1{
			key-name = "mac";
			key-device  = "normal";
			key-permit = "read","write","del";
		};
	}; /* End unifykey */

	gpio_keypad{
		compatible = "amlogic, gpio_keypad";
		status = "okay";
		scan_period = <20>;
		key_num = <1>;
		key_name = "power";
		key_code = <116>;
		key-gpios = <&gpio  GPIOD_4  GPIO_ACTIVE_HIGH>;
		detect_mode = <0>;/*0:polling mode, 1:irq mode*/
	};

	unifykey{
		compatible = "amlogic,unifykey";
		status = "okay";
		unifykey-num = <22>;
		unifykey-index-0 = <&keysn_0>;
		unifykey-index-1 = <&keysn_1>;
		unifykey-index-2 = <&keysn_2>;
		unifykey-index-3 = <&keysn_3>;
		unifykey-index-4 = <&keysn_4>;
		unifykey-index-5 = <&keysn_5>;
		unifykey-index-6 = <&keysn_6>;
		unifykey-index-7 = <&keysn_7>;
		unifykey-index-8 = <&keysn_8>;
		unifykey-index-9 = <&keysn_9>;
		unifykey-index-10= <&keysn_10>;
		unifykey-index-11= <&keysn_11>;
		unifykey-index-12= <&keysn_12>;
		unifykey-index-13= <&keysn_13>;
		unifykey-index-14= <&keysn_14>;
		unifykey-index-15= <&keysn_15>;
		unifykey-index-16= <&keysn_16>;
		unifykey-index-17= <&keysn_17>;
		unifykey-index-18= <&keysn_18>;
		unifykey-index-19= <&keysn_19>;
		unifykey-index-20= <&keysn_20>;
		unifykey-index-21= <&keysn_21>;

		keysn_0: key_0{
			key-name = "usid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_1:key_1{
			key-name = "mac";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_2:key_2{
			key-name = "hdcp";
			key-device = "secure";
			key-type = "sha1";
			key-permit = "read","write","del";
		};
		keysn_3:key_3{
			key-name = "secure_boot_set";
			key-device = "efuse";
			key-permit = "write";
		};
		keysn_4:key_4{
			key-name = "mac_bt";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type  = "mac";
		};
		keysn_5:key_5{
			key-name = "mac_wifi";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type = "mac";
		};
		keysn_6:key_6{
			key-name = "hdcp2_tx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_7:key_7{
			key-name = "hdcp2_rx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_8:key_8{
			key-name = "widevinekeybox";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_9:key_9{
			key-name = "deviceid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_10:key_10{
			key-name = "hdcp22_fw_private";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_11:key_11{
			key-name = "PlayReadykeybox25";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_12:key_12{
			key-name = "prpubkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_13:key_13{
			key-name = "prprivkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_14:key_14{
			key-name = "attestationkeybox";// attestation key
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_15:key_15{
			key-name = "region_code";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_16:key_16{
			key-name = "netflix_mgkid";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_17:key_17{
			key-name = "attestationdevidbox";// attest dev id box
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_18:key_18{
			key-name = "oemkey";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_19:key_19{
			key-name = "lcd";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_20:key_20{
			key-name = "lcd_extern";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_21:key_21{
			key-name = "backlight";
			key-device = "normal";
			key-permit = "read","write","del";
		};
	};//End unifykey

	adc_keypad {
		compatible = "amlogic, adc_keypad";
		status = "okay";
		key_name = "update", "vol-", "vol+", "ok";
		key_num = <4>;
		io-channels = <&saradc 2>;
		io-channel-names = "key-chan-2";
		key_chan = <2 2 2 2>;
		key_code = <141 114 115 28>;
		key_val = <0 143 266 389>; //val=voltage/1800mV*1023
		key_tolerance = <40 40 40 40>;
	};
};

/* Audio Related start */
&audiobus {
	tdma: tdm@0 {
		compatible = "amlogic, a1-snd-tdma";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <0 1>;
		dai-tdm-lane-oe-slot-mask-out = <1 0>;
		dai-tdm-clk-sel = <0>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_A
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "mclk", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = </*&tdmout_a*/ &tdmin_a>;
		power-domains = <&pwrdm PDID_CX_AUDIO>;

		status = "okay";
	};

	tdmb: tdm@1 {
		compatible = "amlogic, a1-snd-tdmb";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <1 0 0 0>;
		dai-tdm-lane-slot-mask-out = <1 0 0 0>;
		/* dai-tdm-lane-oe-slot-mask-in = <0 1>; */
		dai-tdm-clk-sel = <1>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_B
				&clkaudio CLKID_AUDIO_MCLK_PAD0
				&clkc CLKID_HIFI_PLL>;
		clock-names = "mclk", "mclk_pad", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdmb_mclk &tdmout_b /*&tdmin_b*/>;

		/* tdmin data comes from ACODEC adc */
		acodec_adc = <1>;

		/*
		 * 0: tdmout_a;
		 * 1: tdmout_b;
		 * 2: tdmout_c;
		 * 3: spdifout;
		 * 4: spdifout_b;
		 */
		//samesource_sel = <3>;
		start_clk_enable = <1>;
		power-domains = <&pwrdm PDID_CX_AUDIO>;

		src-clk-freq = <1155072000>;

		status = "okay";
	};

	tdmlb:tdm@3 {
		compatible = "amlogic, a1-snd-tdmlb";
		#sound-dai-cells = <0>;

		dai-tdm-lane-lb-slot-mask-in = <1 0 0 0>;
		dai-tdm-clk-sel = <1>;

		clocks = <&clkaudio CLKID_AUDIO_MCLK_B
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "mclk", "clk_srcpll";

		/*
		 * select tdmin_lb src;
		 * AXG
		 *  0: TDMOUTA
		 *  1: TDMOUTB
		 *  2: TDMOUTC
		 *  3: PAD_TDMINA
		 *  4: PAD_TDMINB
		 *  5: PAD_TDMINC
		 *
		 * G12A/G12B
		 *  0: TDMOUTA
		 *  1: TDMOUTB
		 *  2: TDMOUTC
		 *  3: PAD_TDMINA_DIN*
		 *  4: PAD_TDMINB_DIN*
		 *  5: PAD_TDMINC_DIN*
		 *  6: PAD_TDMINA_D*, oe pin
		 *  7: PAD_TDMINB_D*, oe pin
		 *
		 * TL1/SM1
		 *  0: TDMOUTA
		 *  1: TDMOUTB
		 *  2: TDMOUTC
		 *  3: PAD_TDMINA_DIN*
		 *  4: PAD_TDMINB_DIN*
		 *  5: PAD_TDMINC_DIN*
		 *  6: PAD_TDMINA_D*
		 *  7: PAD_TDMINB_D*
		 *  8: PAD_TDMINC_D*
		 *  9: HDMIRX_I2S
		 *  10: ACODEC_ADC
		 *
		 * A1
		 *  0: TDMOUTA
		 *  1: TDMOUTB
		 *  3: PAD_TDMINA_DIN*
		 *  4: PAD_TDMINB_DIN*
		 */

		lb-src-sel = <1>;
		power-domains = <&pwrdm PDID_CX_AUDIO>;

		status = "okay";
	};

	pdm: pdm {
		compatible = "amlogic, a1-snd-pdm";
		#sound-dai-cells = <0>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_PDM
			&clkc CLKID_HIFI_PLL
			&clkc CLKID_HIFI_PLL
			&clkaudio CLKID_AUDIO2_PDM_DCLK
			&clkaudio CLKID_AUDIO2_PDM_SYSCLK>;
		clock-names = "gate",
			"sysclk_srcpll",
			"dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk";

		pinctrl-names = "pdm_pins";
		pinctrl-0 = </*&pdmin*/>;

		/* mode 0~4, defalut:1 */
		filter_mode = <1>;
		lane-mask-in = <1 1 0 0>;

		sys-src-clk-freq = <1155072000>;
		power-domains = <&pwrdm PDID_CX_PDM>;

		status = "okay";
	};

	asrcb: resample@1 {
		compatible = "amlogic, c2-resample-b";
		clocks = <&clkc CLKID_HIFI_PLL
			&clkaudio CLKID_AUDIO_MCLK_D
			&clkaudio CLKID_AUDIO_RESAMPLEA>;
		clock-names = "resample_pll", "resample_src", "resample_clk";

		/*this resample is only used for loopback_A.*/
		/*only support 16000 or 48000Hz for capture*/
		capture_sample_rate = <16000>;

		/* hifi pll rate */
		src-clk-freq = <1155072000>;

		status = "disabled";
	};

	vad:vad {
		compatible = "amlogic, snd-vad-top";
		#sound-dai-cells = <0>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_TOVAD
			/* &clkc CLKID_FCLK_DIV2 */
			&xtal
			&clkaudio CLKID_AUDIO2_VAD_CLK>;
		clock-names = "gate", "pll", "clk";

		interrupts = <GIC_SPI 185 IRQ_TYPE_EDGE_RISING
				GIC_SPI 186 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "irq_wakeup", "irq_frame_sync";

		/*
		 * Data src sel:
		 * 2: tdmin_c, actually tdmin_vad
		 * 4: pdmin
		 */
		src = <4>;

		/*
		 * deal with hot word in user space or kernel space
		 * 0: in user space
		 * 1: in kernel space
		 */
		level = <1>;

		status = "disabled";
	};

	loopback: loopback {
		compatible = "amlogic, a1-loopbacka";
		#sound-dai-cells = <0>;

		original-src = <&tdmb>;
		//tdmin_lb-src = <&tdmin_lb>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_PDM
			&clkc CLKID_HIFI_PLL
			&clkc CLKID_HIFI_PLL
			&clkaudio CLKID_AUDIO2_PDM_DCLK
			&clkaudio CLKID_AUDIO2_PDM_SYSCLK
			&clkc CLKID_HIFI_PLL
			&clkaudio CLKID_AUDIO_MCLK_C>;
		clock-names = "pdm_gate",
			"pdm_sysclk_srcpll",
			"pdm_dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk",
			"tdminlb_mpll",
			"tdminlb_mclk";

		/* datain src
		 * 0: tdmin_a;
		 * 1: tdmin_b;
		 * 2: tdmin_c;
		 * 3: spdifin;
		 * 4: pdmin;
		 */
		datain_src = <1>;
		datain_chnum = <1>;
		datain_chmask = <0x1>;
		/* config which data pin for loopback */
		datain-lane-mask-in = <1 0 0 0>;

		sys-src-clk-freq = <1155072000>;

		/* calc mclk for datalb */
		mclk-fs = <256>;

		/* tdmin_lb src
		 * 0: tdmoutA
		 * 1: tdmoutB
		 * 2: tdmoutC
		 * 3: PAD_TDMINA_DIN*, refer to core pinmux
		 * 4: PAD_TDMINB_DIN*, refer to core pinmux
		 * 5: PAD_TDMINC_DIN*, refer to core pinmux
		 * 6: PAD_TDMINA_D*, oe, refer to core pinmux
		 * 7: PAD_TDMINB_D*, oe, refer to core pinmux
		 */
		/* if tdmin_lb >= 3, use external loopback */
		datalb_src = <1>;
		datalb_chnum = <2>;
		datalb_chmask = <0x1>;
		/* config which data pin as loopback */
		datalb-lane-mask-in = <1 0 0 0>;
		power-domains = <&pwrdm PDID_CX_AUDIO>;

		status = "okay";
	};

	aed:effect {
		compatible = "amlogic, snd-effect-v4";
		#sound-dai-cells = <0>;
		clocks = <&clkaudio CLKID_AUDIO_GATE_EQDRC
			&clkc CLKID_FCLK_DIV3
			&clkaudio CLKID_AUDIO_EQDRC>;
		clock-names = "gate", "srcpll", "eqdrc";
		/*
		 * 0:tdmout_a
		 * 1:tdmout_b
		 * 2:tdmout_c
		 * 3:spdifout
		 * 4:spdifout_b
		 */
		eqdrc_module = <1>;
		/* max 0xf, each bit for one lane, usually one lane */
		lane_mask = <0x1>;
		/* max 0xff, each bit for one channel */
		channel_mask = <0x3>;
		power-domains = <&pwrdm PDID_CX_AUDIO>;
		status = "okay";
	};
}; /* end of audiobus */
/* Audio Related end */

&periphs_pinctrl {
	/* Audio Related start */
		tdmout_a: tdmout_a {
		mux { /* GPIOX_11, GPIOX_10, GPIOX_9 */
			groups = "tdm_a_sclk",
				"tdm_a_fs",
				"tdm_a_dout0";
			function = "tdm_a";
		};
	};

	tdmin_a: tdmin_a {
		mux { /* GPIOX_8 */
			groups = "tdm_a_din1";
			function = "tdm_a";
		};
	};

	tdmb_mclk: tdmb_mclk {
		mux {
			groups = "mclk_0";
			function = "mclk_0";
			drive-strength = <2>;
		};
	};

	tdmout_b: tdmout_b {
		mux { /* GPIOA_1, GPIOA_2, GPIOA_3 */
			groups = "tdm_b_sclk",
				"tdm_b_fs",
				"tdm_b_dout0";
			function = "tdm_b";
			drive-strength = <2>;
		};
	};

	tdmin_b:tdmin_b {
		mux { /* GPIOA_7 */
			groups = "tdm_b_din0";
			function = "tdm_b";
			drive-strength = <2>;
		};
	};

	spdifin: spdifin {
		mux {/* GPIOF_6 */
			groups = "spdif_in_f6";
			function = "spdif_in";
		};
	};

	pdmin: pdmin {
		mux { /* GPIOM_3, GPIOM_2 */
			groups =
				"pdm_din0_m",
				"pdm_dclk_m";
			function = "pdm";
		};
	};

	/* Audio Related end */
};

&dwc2_a {
	status = "okay";
	/** 0: normal, 1: otg+dwc3 host only, 2: otg+dwc3 device only*/
	controller-type = <3>;
};

&dwc3 {
	status = "okay";
};

&usb2_phy_v2 {
	status = "okay";
	portnum = <1>;
	otg-phy-index = <0>;
};

&usb3_phy_v2 {
	status = "okay";
	portnum = <0>;
	otg = <1>;
	gpio-vbus-power = "GPIOD_9";
	gpios = <&gpio GPIOD_9 GPIO_ACTIVE_HIGH>;
};

&aml_bc {
	status = "disable";
};

&aml_cc {
	status = "disable";
};

&uart_B {
	status = "okay";
};

&i2c1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_master_pins2>;
};

&i2c2 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c2_master_pins2>;
	pinctrl-1 = <&i2c2_master_sleep_pins2>;
	clock-frequency = <100000>; /* default 100k */
	sensor-i2c@6c {
		compatible = "arm, i2c-sensor";
		reg = <0x6c>;
		reg-names = "i2c-sensor";
		slave-addr = <0x6c>;
		reg-type = <2>;
		reg-data-type = <1>;
		link-device = <&phycsi>;
	};
};

&isp {
	status = "okay";
	temper-line-offset = <0x1f80>;
	temper-buf-size = <32>;
	temper-frame-num = <1>;
	temper-frame-size = <0x2000000>;
	memory-region = <&isp_cma_reserved>;
};

&adapter {
	status = "okay";
	mem_alloc = <12>;
	memory-region = <&adapt_cma_reserved>;
};

&ir {
	status = "okay";
	pinctrl-0 = <&remote_pins>;
	pinctrl-names = "default";
};

&sd_emmc_a {
	status = "okay";
	pinctrl-0 = <&sdio_m_pins>;
	pinctrl-1 = <&sdio_m_clk_gate_pins>;
	pinctrl-names = "default", "clk-gate";
	bus-width = <4>;
	cap-sd-highspeed;
	sd-uhs-sdr104;
	non-removable;
	max-frequency = <200000000>;
	disable-wp;
	cap-sdio-irq;
	keep-power-in-suspend;
};

&pwm_ef {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&pwm_e_pins1>;
};

&aml_wifi {
	status = "okay";
};

&aml_bt {
	status = "okay";
};

&sd_emmc_b {
	status = "okay";
	pinctrl-0 = <&sdcard_pins>;
	pinctrl-1 = <&sdcard_clk_gate_pins>;
	pinctrl-2 = <&sd_1bit_pins>;
	pinctrl-3 = <&b_uart_pins1
		     &sdcard_clk_gate_pins &ao_to_sd_uart_pins>;
	pinctrl-4 = <&b_uart_pins1
		     &sd_1bit_pins &ao_to_sd_uart_pins>;
	pinctrl-5 = <&sdcard_pins &b_uart_enable_pins1>;
	pinctrl-6 = <&b_uart_pins1
		     &ao_to_sd_uart_pins>;
	pinctrl-7 = <&sdcard_pins &b_uart_enable_pins1>;
	pinctrl-8 = <&b_uart_pins1
		     &ao_to_sd_uart_pins>;
	pinctrl-9 = <&sdcard_pins_sleep>;
	pinctrl-names = "sd_default",
			"clk-gate",
			"sd_1bit_pins",
			"sd_clk_cmd_uart_pins",
			"sd_1bit_uart_pins",
			"sd_to_ao_uart_pins",
			"ao_to_sd_uart_pins",
			"sd_to_ao_jtag_pins",
			"ao_to_sd_jtag_pins",
			 "sleep";
	bus-width = <4>;
	cap-sd-highspeed;
	//sd-uhs-sdr104;
	disable-wp;
	max-frequency = <200000000>;
	cd-gpios = <&gpio GPIOC_6 GPIO_ACTIVE_HIGH>;
	dat1-gpios = <&gpio GPIOC_1 GPIO_ACTIVE_HIGH>;
	dat3-gpios = <&gpio GPIOC_3 GPIO_ACTIVE_HIGH>;
	//vmmc-supply = <&sdcard_power>;
	//vqmmc-supply = <&vddio_card>;
};

&sd_emmc_c {
	status = "okay";
	pinctrl-0 = <&emmc_pins>;
	pinctrl-1 = <&emmc_clk_gate_pins>;
	pinctrl-2 = <&emmc_pins_sleep>;
	pinctrl-names = "default", "clk-gate", "sleep";
	cap-mmc-highspeed;
	non-removable;
	//mmc-ddr-1_8v;
	//mmc-hs200-1_8v;
	//mmc-hs400-1_8v;
	max-frequency = <200000000>;
	disable-wp;
	bus-width = <8>;
};

&mtd_nand {
	status = "disabled";
	#address-cells = <1>;
	#size-cells = <0>;

	pinctrl-names = "nand_norb_mod","nand_cs_only";
	pinctrl-0 = <&all_nand_pins>;
	pinctrl-1 = <&nand_cs_pins>;
	bl_mode = <1>;
	fip_copies = <4>;
	fip_size = <0x200000>;
	ship_bad_block = <1>;
	disa_irq_flag = <1>;
	nand@bootloader {
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;
		nand-ecc-maximize;
		partition@0 {
			label = "bootloader";
			reg = <0x0 0x00000000>;
		};
	};
	nand@normal {
		reg = <0>;
		#address-cells = <1>;
		#size-cells = <1>;
		nand-ecc-maximize;

		partition@0 {
			label = "tpl";
			reg = <0x0 0x00000000>;
		};
		partition@2 {
			label = "recovery";
			reg = <0x0 0x2000000>;
		};
		partition@3 {
			label = "boot";
			reg = <0x0 0x2000000>;
		};
		partition@4 {
			label = "system";
			reg = <0x0 0x13000000>;
		};
		partition@5 {
			label = "data";
			reg = <0x0 0xffffffff>;
		};
	};
};

&spifc {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&spifc_pins>;
	spi-nand@0 {
		compatible = "spi-nand";
		status = "disabled";
		reg = <0>;
		spi-max-frequency = <38000000>;
		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;
		bl_mode = <1>;
		fip_copies = <4>;
		fip_size = <0x200000>;
		partition = <&snand_partitions>;
		snand_partitions: snand_partitions{
			bootloader{
				offset=<0x0 0x0>;
				size=<0x0 0x0>;
			};
			tpl{
				offset=<0x0 0x0>;
				size=<0x0 0x0>;
			};
			logo{
				offset=<0x0 0x0>;
				size=<0x0 0x200000>;
			};
			recovery{
				offset=<0x0 0x0>;
				size=<0x0 0x1000000>;
			};
			boot{
				offset=<0x0 0x0>;
				size=<0x0 0x1000000>;
			};
			system{
				offset=<0x0 0x0>;
				size=<0x0 0x4000000>;
			};
			data{
				offset=<0xffffffff 0xffffffff>;
				size=<0x0 0x0>;
			};
		};
	};
};

&ethmac {
	pinctrl-0 = <&eth_pins>;
	pinctrl-names = "default";
	status = "okay";
	phy-mode = "rmii";
	phy-handle = <&external_phy>;
//	amlogic,tx-delay-ns = <2>;
	mc_val = <0x1624>;
};

&saradc {
	status = "okay";
};

&spicc1 {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&spicc1_pins1>;
	cs-gpios = <&gpio GPIOA_14 0>;
};

&freertos {
	status = "okay";
};
