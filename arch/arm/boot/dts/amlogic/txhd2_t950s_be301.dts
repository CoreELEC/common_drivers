// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2019 Amlogic, Inc. All rights reserved.
 */

/dts-v1/;

#include "mesontxhd2.dtsi"
#include "meson_txhd2-panel.dtsi"
#include "partition_mbox_normal_txhd2_P_32.dtsi"
#include "mesontxhd2_audio.dtsi"
/ {
	amlogic-dt-id = "txhd2_t950s_be301";
	compatible = "txhd2_t950s_be301";
	interrupt-parent = <&gic>;
	#address-cells = <1>;
	#size-cells = <1>;

	aliases {
		serial0 = &uart_AO;
		serial1 = &uart_A;
		serial2 = &uart_B;
		serial3 = &uart_C;
		serial4 = &uart_AO_B;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
		i2c4 = &i2c_AO;
	};

	memory@00000000 {
		device_type = "memory";
		linux,usable-memory = <0x00000000 0x40000000>;
	};
	/* Audio Related start */
	audio: auge_sound {
		compatible = "amlogic, auge-sound-card";
		aml-audio-card,name = "AML-AUGESOUND";
		/*spk mute gpio*/
		spk_mute-gpios = <&gpio GPIODV_6 GPIO_ACTIVE_LOW>;
		/*avout mute gpio*/
		avout_mute-gpios = <&gpio GPIODV_5 GPIO_ACTIVE_HIGH>;
		/* headphone insert det */
		aml-audio-card,hp-det-gpio = <&gpio GPIOZ_7 GPIO_ACTIVE_LOW>;
		interrupts = <GIC_SPI 235 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "audio_exception64";

		status = "okay";

		aml-audio-card,dai-link@0 {
			format = "dsp_a";
			mclk-fs = <512>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdma>;
			frame-master = <&tdma>;
			/* slave mode */
			/*
			 * bitclock-master = <&tdmacodec>;
			 * frame-master = <&tdmacodec>;
			 */
			/* suffix-name, sync with android audio hal used for */
			suffix-name = "alsaPORT-pcm";
			tdmacpu: cpu {
				sound-dai = <&tdma>;
				dai-tdm-slot-tx-mask =
							<1 1>;
				dai-tdm-slot-rx-mask =
							<1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <16>;
				system-clock-frequency = <256000>;
			};
			tdmacodec: codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@1 {
			format = "i2s";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdmb>;
			frame-master = <&tdmb>;
			/* slave mode */
			//bitclock-master = <&tdmbcodec>;
			//frame-master = <&tdmbcodec>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-i2s-i2s4hdmirx";
			cpu {
				sound-dai = <&tdmb>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				/*
				 * dai-tdm-slot-tx-mask =
				 *	<1 1 1 1 1 1 1 1>;
				 * dai-tdm-slot-rx-mask =
				 *	<1 1 1 1 1 1 1 1>;
				 * dai-tdm-slot-num = <8>;
				 */
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			tdmbcodec: codec {
				prefix-names = "AMP";
				sound-dai = <&acodec>;
			};
		};

		aml-audio-card,dai-link@2 {
			format = "i2s";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdmc>;
			frame-master = <&tdmc>;
			/* slave mode */
			//bitclock-master = <&tdmccodec>;
			//frame-master = <&tdmccodec>;
			/* suffix-name, sync with android audio hal used for */
			suffix-name = "alsaPORT-i2s4parser";
			cpu {
				sound-dai = <&tdmc>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <12288000>;
			};
			tdmccodec: codec {
				sound-dai = <&dummy_codec>;
			};
		};
		aml-audio-card,dai-link@3 {
			mclk-fs = <64>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-pdm-builtinmic";
			cpu {
				sound-dai = <&pdma>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@4 {
			mclk-fs = <128>;
			//continuous-clock;
			/* suffix-name, sync with android audio hal used for */
			suffix-name = "alsaPORT-spdif";
			cpu {
				sound-dai = <&spdifa>;
				system-clock-frequency = <6144000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		/* spdif_b to hdmi, only playback */
		aml-audio-card,dai-link@5 {
			mclk-fs = <128>;
			//continuous-clock;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-spdifb";
			cpu {
				sound-dai = <&spdifb>;
				system-clock-frequency = <6144000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@6 {
			mclk-fs = <256>;
			continuous-clock;
			suffix-name = "alsaPORT-loopback";
			cpu {
				sound-dai = <&loopbacka>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@7 {
			mclk-fs = <256>;
			suffix-name = "alsaPORT-tv";
			cpu {
				sound-dai = <&extn>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};
	};
	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		secmon_reserved:linux,secmon {
			compatible = "shared-dma-pool";
			no-map;
			alignment = <0x400000>;
			reg = <0x05000000 0x400000>;
		};

		/*  POST PROCESS MANAGER */
		ppmgr_reserved:linux,ppmgr {
			compatible = "shared-dma-pool";
			size = <0x0 0x0>;
		};

		ion_cma_reserved:linux,ion-dev {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x1c00000>;
			alignment = <0x400000>;
			alloc-ranges = <0x0 0x3f000000>;
		};

		ion_fb_reserved:linux,ion-fb {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x0000000>;
			alignment = <0x400000>;
			alloc-ranges = <0x0 0x3f000000>;
		};

		logo_reserved:linux,meson-fb {
			compatible = "amlogic, meson-fb";
			alignment = <0x400000>;
			reg = <0x3f800000 0x800000>;
		};

		codec_mm_cma:linux,codec_mm_cma {
				compatible = "shared-dma-pool";
				reusable;
				size = <0xa800000>;
				alignment = <0x400000>;
				linux,contiguous-region;
				alloc-ranges = <0x0 0x30000000>;
		};

		/* codec shared reserved */
		codec_mm_reserved:linux,codec_mm_reserved {
			compatible = "amlogic, codec-mm-reserved";
			size = <0x0>;
			alignment = <0x100000>;
			//no-map;
		};
	};

	codec_mm {
		compatible = "amlogic, codec, mm";
		memory-region = <&codec_mm_cma &codec_mm_reserved>;
		dev_name = "codec_mm";
		status = "okay";
	};

	wifi5v_reg: fixed@wifi5v_reg{
		vin-supply = <&vcc5v_reg>;
		compatible = "regulator-fixed";
		regulator-name = "WIFI_5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;
	};

	usb5v_reg: fixed@usb5v_reg{
		vin-supply = <&vcc5v_reg>;
		compatible = "regulator-fixed";
		regulator-name = "USB_5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;
	};

	vddio3v3_reg: fixed@vddio3v3_reg{
		vin-supply = <&vddao3v3_reg>;
		compatible = "regulator-fixed";
		regulator-name = "VDDIO_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio_ao GPIOAO_2 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
		regulator-always-on;
	};

	vddio3v3_sd_reg: fixed@vddio3v3_sd_reg{
		vin-supply = <&vddao3v3_reg>;
		compatible = "regulator-fixed";
		regulator-name = "VDDIO_3V3_SD";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio_test GPIO_TEST_N GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-boot-on;
		regulator-always-on;
	};

	afe1v8_reg: fixed@afe1v8_reg{
		vin-supply = <&vddio3v3_sd_reg>;
		compatible = "regulator-fixed";
		regulator-name = "AFE_1V8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	wifi3v3_reg: fixed@wifi3v3_reg{
		vin-supply = <&vddio3v3_sd_reg>;
		compatible = "regulator-fixed";
		regulator-name = "WIFI_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpio GPIOB_12 GPIO_ACTIVE_LOW>;
		enable-active-low;
		regulator-boot-on;
		regulator-always-on;
	};

	hdmirx {
		compatible = "amlogic, hdmirx_txhd2";
		#address-cells=<1>;
		#size-cells=<1>;
		/*memory-region = <&hdmirx_emp_cma_reserved>;*/
		status = "okay";
		pinctrl-names = "hdmirx_pins";
		pinctrl-0 = <&hdmirx_a_mux &hdmirx_b_mux>;
		repeat = <0>;
		/*power-domains = <&pwrdm PDIP_TXHD2_VPU_HDMI>;*/
		interrupts = <0 41 IRQ_TYPE_LEVEL_HIGH>;
		clocks =<&clkc CLKID_HDMIRX_CFG>,
			   <&clkc CLKID_HDMIRX_ACR>,
			   <&clkc CLKID_HDMIRX_METER>,
			   <&clkc CLKID_HDMIRX_2M>,
			   <&clkc CLKID_HDMIRX_5M>,
			   <&clkc CLKID_HDMIRX_HDCP>,
			   <&xtal>,
			   <&clkc CLKID_FCLK_DIV4>,
			   <&clkc CLKID_FCLK_DIV5>;
		clock-names = "hdmirx_cfg_clk",
				"cts_hdmirx_acr_ref_clk",
				"cts_hdmirx_meter_clk",
				"cts_hdmirx_2m_clk",
				"cts_hdmirx_5m_clk",
				"cts_hdmirx_hdcp2x_eclk",
				"xtal",
				"fclk_div4",
				"fclk_div5";
		power-domains = <&pwrdm 2>;
		hdmirx_id = <0>;
		en_4k_2_2k = <0>;
		hpd_low_cec_off = <1>;
		arc_port = <1>;
		vrr_range_dynamic_update_en = <1>;
		/* bit4: enable feature, bit3~0: port number */
		disable_port = <0x0>;
		/* MAP_ADDR_MODULE_CBUS */
		/* MAP_ADDR_MODULE_HIU */
		/* MAP_ADDR_MODULE_HDMIRX_CAPB3 */
		/* MAP_ADDR_MODULE_SEC_AHB */
		/* MAP_ADDR_MODULE_SEC_AHB2 */
		/* MAP_ADDR_MODULE_APB4 */
		/* MAP_ADDR_MODULE_TOP */
		/* MAP_ADDR_MODULE_COR */
		/* MAP_ADDR_MODULE_CLK_CTRL */
		/* MAP_ADDR_MODULE_ANA_CTRL */
		reg = < 0x0 0x0
			0xff63C000 0x2000
			0x0 0x0
			0x0 0x0
			0x0 0x0
			0x0 0x0
			0xff618000 0x7fff
			0xff680000 0xffff
			0xff646000 0x1fff
			0x0 0x0>;
	};

	unifykey{
		compatible = "amlogic,unifykey";
		status = "okay";
		unifykey-num = <19>;
		unifykey-index-0 = <&keysn_0>;
		unifykey-index-1 = <&keysn_1>;
		unifykey-index-2 = <&keysn_2>;
		unifykey-index-3 = <&keysn_3>;
		unifykey-index-4 = <&keysn_4>;
		unifykey-index-5 = <&keysn_5>;
		unifykey-index-6 = <&keysn_6>;
		unifykey-index-7 = <&keysn_7>;
		unifykey-index-8 = <&keysn_8>;
		unifykey-index-9 = <&keysn_9>;
		unifykey-index-10= <&keysn_10>;
		unifykey-index-11= <&keysn_11>;
		unifykey-index-12= <&keysn_12>;
		unifykey-index-13= <&keysn_13>;
		unifykey-index-14= <&keysn_14>;
		unifykey-index-15= <&keysn_15>;
		unifykey-index-16= <&keysn_16>;
		unifykey-index-17= <&keysn_17>;
		unifykey-index-18= <&keysn_18>;

		keysn_0: key_0{
			key-name = "usid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_1:key_1{
			key-name = "mac";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_2:key_2{
			key-name = "hdcp";
			key-device = "secure";
			key-type = "sha1";
			key-permit = "read","write","del";
		};
		keysn_3:key_3{
			key-name = "secure_boot_set";
			key-device = "efuse";
			key-permit = "write";
		};
		keysn_4:key_4{
			key-name = "mac_bt";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type  = "mac";
		};
		keysn_5:key_5{
			key-name = "mac_wifi";
			key-device = "normal";
			key-permit = "read","write","del";
			key-type = "mac";
		};
		keysn_6:key_6{
			key-name = "hdcp2_tx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_7:key_7{
			key-name = "hdcp2_rx";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_8:key_8{
			key-name = "widevinekeybox";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_9:key_9{
			key-name = "deviceid";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_10:key_10{
			key-name = "hdcp22_fw_private";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_11:key_11{
			key-name = "PlayReadykeybox25";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_12:key_12{
			key-name = "prpubkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_13:key_13{
			key-name = "prprivkeybox";// PlayReady
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_14:key_14{
			key-name = "attestationkeybox";// attestation key
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_15:key_15{
			key-name = "region_code";
			key-device = "normal";
			key-permit = "read","write","del";
		};
		keysn_16:key_16{
			key-name = "netflix_mgkid";
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_17:key_17{
			key-name = "attestationdevidbox";// attest dev id box
			key-device = "secure";
			key-permit = "read","write","del";
		};
		keysn_18:key_18{
			key-name = "oemkey";
			key-device = "normal";
			key-permit = "read","write","del";
		};
	};//End unifykey

	ppmgr {
		compatible = "amlogic, ppmgr";
		memory-region = <&ppmgr_reserved>;
		dev_name = "ppmgr";
		status = "okay";
	};

	ionvideo {
		compatible = "amlogic, ionvideo";
		dev_name = "ionvideo";
		status = "okay";
	};

	amlvideo2_0 {
		compatible = "amlogic, amlvideo2";
		dev_name = "amlvideo2";
		status = "okay";
		amlvideo2_id = <0>;
		cma_mode = <1>;
	};

	amlvideo2_1 {
		compatible = "amlogic, amlvideo2";
		dev_name = "amlvideo2";
		status = "okay";
		amlvideo2_id = <1>;
		cma_mode = <1>;
	};
}; /* end of / */

&tdmb {
	pinctrl-names = "tdm_pins","tdmout_a_gpio";
	pinctrl-0 =
			<&mclk_1_pins
			&tdm_b_pins
			&tdm_d2_pins
			&tdmb_clk_pins>;
	pinctrl-1 = <&tdmout_a_gpio>;

};

&pdma {
	pinctrl-names = "pdm_pins";
	pinctrl-0 = <&pdmin>;
};

&spdifa {
	pinctrl-names = "spdif_pins",
			"spdif_pins_mute";
	pinctrl-0 = <&spdif_out_a_dv3_pins>;
	pinctrl-1 = <&spdifout_a_mute_dv3_pins>;
};

&aed {
	status = "disabled";
};

&pinctrl_periphs {
	tdm_b_pins: tdm_b_pin {
		mux { /* GPIOC_0, GPIOC_5, GPIOC_4 */
			groups = "tdm_sclk1_c0",
				"tdm_fs1_c5",
				"tdm_d2_c4";
			function = "tdm";
		};
	};
	tdmout_a_gpio: tdmout_a_gpio {
		mux { /* GPIOC_0, GPIOC_5,  GPIOC_4*/
			groups ="GPIOC_0",
				"GPIOC_5",
				"GPIOC_4";
			function = "gpio_periphs";
			output-low;
		};
	};
};

&pinctrl_aobus {
	pdmin: pdmin {
		mux { /* GPIOAO_12, GPIOAO_13*/
			groups = "pdm_din0_ao12",
					"pdm_dclk_ao13";
			function = "pdm_ao";
		};
	};
};

&pinctrl_audio {
	tdm_d2_pins: tdm_d2_pin {
		mux {
			groups = "tdm_d2";
			function = "tdmoutb_lane0";
		};
	};
	tdmb_clk_pins: tdmb_clk_pin {
		mux {
			groups = "tdm_sclk1", "tdm_lrclk1";
			function = "tdm_clk_outb";
		};
	};
};

&sd_emmc_c {
	status = "okay";
	pinctrl-0 = <&emmc_pins>, <&emmc_ds_pins>;
	pinctrl-1 = <&emmc_clk_gate_pins>;
	pinctrl-names = "default", "clk-gate";

	bus-width = <8>;
	cap-sd-highspeed;
	cap-mmc-highspeed;
	mmc-ddr-1_8v;
	mmc-hs200-1_8v;
//  mmc-hs400-1_8v;
	max-frequency = <200000000>;
	non-removable;
	disable-wp;

//  mmc-pwrseq = <&emmc_pwrseq>;
//  vmmc-supply = <&vddao_3v3>;
//  vqmmc-supply = <&vddao_1v8>;
};

&meson_fb {
	status = "okay";
	display_size_default = <1920 1080 1920 2160 32>;
	mem_size = <0x00800000 0x1980000 0x100000>;
	logo_addr = "0x3f800000";
	mem_alloc = <0>;
	pxp_mode = <0>; /** 0:normal mode 1:pxp mode */
};

&uart_AO {
	status = "okay";
};

&ir {
	status = "okay";
	pinctrl-0 = <&remote_pins>;
	pinctrl-names = "default";
};

&crg_phy_20 {
	status = "okay";
	portnum = <1>;
};

&crg3_phy_20 {
	status = "okay";
	portnum = <0>;
};

&crg20_otg {
	status = "okay";
	controller-type = <1>;
};

&crg20_drd {
	compatible = "amlogic, crg-drd";
	status = "okay";
};

&crg_udc_2 {
	status = "okay";
};

&crg_phy_21 {
	status = "okay";
	portnum = <2>;
	gpio-vbus-power = "GPIODV_7";
	gpios = <&gpio GPIODV_7 GPIO_ACTIVE_HIGH>;
};

&crg3_phy_21 {
	status = "okay";
	portnum = <0>;
};

&crg2_drd {
	compatible = "amlogic, crg-host-drd";
	status = "okay";
};

&ethmac {
	status = "okay";
	phy-handle = <&internal_ephy>;
	phy-mode = "rmii";
};
