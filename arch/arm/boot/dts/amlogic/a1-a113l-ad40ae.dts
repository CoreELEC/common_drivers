// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright (c) 2019 Amlogic, Inc. All rights reserved.
 */

/dts-v1/;

#include "meson-a1.dtsi"

/ {
	amlogic-dt-id = "a1-a113l_ad40ae";
	compatible = "a1-a113l-ad40ae";

	aliases {
		serial0 = &uart_B;
		serial1 = &uart_A;
		serial2 = &uart_C;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &i2c2;
		i2c3 = &i2c3;
		spi0 = &spifc;
		spi1 = &spicc0;
		tsensor0 = &tsensor;
	};
	chosen {
		stdout-path = "serial0:115200n8";
	};
	memory@0 {
		device_type = "memory";
		linux,usable-memory = <0x0 0x8000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		dsp_fw_reserved0:linux,dsp_fw0 {
			compatible = "amlogic, dsp";
			size = <0x1000000>;
			reg = <0x2800000 0x1000000>;
		};

		dsp_fw_reserved1:linux,dsp_fw1 {
			compatible = "amlogic, dsp";
			size = <0x400000>;
			reg = <0x3800000 0x400000>;
		};

		secos_reserved:linux,secos {
			status = "okay";
			compatible = "amlogic, aml_secos_memory";
			reg = <0x03d00000 0x00300000>;
			no-map;
		};

		/* global autoconfigured region for contiguous allocations */
		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x800000>;
			alignment = <0x400000>;
			linux,cma-default;
		};
	};

	battery_4v2: regulator-battery_4v2 {
		compatible = "regulator-fixed";
		regulator-name = "4V2";
		regulator-min-microvolt = <4200000>;
		regulator-max-microvolt = <4200000>;
		regulator-always-on;
	};

	vddq_1v35: regulator-vddq_1v35 {
		compatible = "regulator-fixed";
		regulator-name = "VDDQ_1V35";
		regulator-min-microvolt = <1350000>;
		regulator-max-microvolt = <1350000>;
		vin-supply = <&battery_4v2>;
		regulator-always-on;
	};

	vddao_3v3: regulator-vddao_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "VDDAO_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&battery_4v2>;
		regulator-always-on;
	};

	vcc_3v3: regulator-vcc_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "VCC_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&vddao_3v3>;
		regulator-always-on;
	};

	vddio_1v8: regulator-vddio_1v8 {
		compatible = "regulator-fixed";
		regulator-name = "VDDIO_1V8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vddao_3v3>;
		regulator-always-on;
	};

	main_12v: regulator-main_12v {
		compatible = "regulator-fixed";
		regulator-name = "12V";
		regulator-min-microvolt = <12000000>;
		regulator-max-microvolt = <12000000>;
		regulator-always-on;
	};

	vcc_3v3: regulator-vcc_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "VCC_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&main_12v>;
		regulator-always-on;
	};

	vddio_3v3: regulator-vddio_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "VDDIO_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&vcc_3v3>;
		regulator-always-on;
	};

	vcc_1v8: regulator-vcc_1v8 {
		compatible = "regulator-fixed";
		regulator-name = "VCC_1V8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vcc_3v3>;
		regulator-always-on;
	};

	vcc_5v: regulator-vcc_5v {
		compatible = "regulator-fixed";
		regulator-name = "VCC_5V";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		vin-supply = <&main_12v>;
		regulator-always-on;
	};

	avddao_1v8: regulator-avddao_1v8 {
		compatible = "regulator-fixed";
		regulator-name = "AVDDAO_1V8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vcc_5v>;
		regulator-always-on;
	};

	vddio_ao_3v3: regulator-vddio_ao_3v3 {
		compatible = "regulator-fixed";
		regulator-name = "VDDIO_AO_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&vcc_5v>;
		regulator-always-on;
	};

	/* Audio Related start */
	dummy_codec:dummy_codec{
		#sound-dai-cells = <0>;
		compatible = "amlogic, aml_dummy_codec";
		status = "okay";
	};

	a1_codec:a1_codec {
		#sound-dai-cells = <0>;
		compatible = "amlogic, a1_acodec";
		status = "okay";
		reg = <0xFE004800 0x20>;
		tdmout_index = <1>;
		tdmin_index = <1>;
		dat0_ch_sel = <0>;
		/*audio output mode
		 *0:single end output
		 *1:differential output
		 */
		dacr_output_inv = <0>;
		power-domains = <&pwrdm PDID_ACODEC>;
	};

	auge_sound {
		compatible = "amlogic, auge-sound-card";
		aml-audio-card,name = "AML-AUGESOUND";
		//aml-audio-card,hp-det-gpio = <&gpio GPIOP_6 GPIO_ACTIVE_LOW>;
		/*avout mute gpio*/
		// avout_mute-gpios = <&gpio GPIOF_4 GPIO_ACTIVE_LOW>;

		aml-audio-card,dai-link@0 {
			format = "dsp_a";
			mclk-fs = <512>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdma>;
			frame-master = <&tdma>;
			/* slave mode */
			/*
			 * bitclock-master = <&tdmacodec>;
			 * frame-master = <&tdmacodec>;
			 */
			suffix-name = "alsaPORT-pcm";
			tdmacpu: cpu {
				sound-dai = <&tdma>;
				dai-tdm-slot-tx-mask =
							<1>;
				dai-tdm-slot-rx-mask =
							<1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <16>;
				system-clock-frequency = <256000>;
			};
			tdmacodec: codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@1 {
			format = "i2s";// "dsp_a";
			mclk-fs = <256>;
			//continuous-clock;
			//bitclock-inversion;
			//frame-inversion;
			/* master mode */
			bitclock-master = <&tdmb>;
			frame-master = <&tdmb>;
			/* slave mode */
			//bitclock-master = <&tdmbcodec>;
			//frame-master = <&tdmbcodec>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-i2s";
			cpu {
				sound-dai = <&tdmb>;
				dai-tdm-slot-tx-mask = <1 1>;
				dai-tdm-slot-rx-mask = <1 1>;
				dai-tdm-slot-num = <2>;
				dai-tdm-slot-width = <32>;
				system-clock-frequency = <614400000>;
			};
			tdmbcodec: codec {
				prefix-names = "a1_codec","ad82128_b_31";
				sound-dai = <
						&a1_codec
						&ad82128_b_31
				>;
			};
		};
#if 0
		aml-audio-card,dai-link@2 {
			mclk-fs = <64>;
			/* suffix-name, sync with android audio hal
			 * what's the dai link used for
			 */
			suffix-name = "alsaPORT-pdm";
			cpu {
				sound-dai = <&pdm>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};
#endif
		aml-audio-card,dai-link@3 {
			mclk-fs = <128>;
			/* suffix-name, sync with android audio hal used for */
			suffix-name = "alsaPORT-spdif";
			cpu {
				sound-dai = <&spdifa>;
				system-clock-frequency = <6144000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

		aml-audio-card,dai-link@4 {
			mclk-fs = <256>;
			continuous-clock;
			suffix-name = "alsaPORT-loopback";
			cpu {
				sound-dai = <&loopback>;
				system-clock-frequency = <12288000>;
			};
			codec {
				sound-dai = <&dummy_codec>;
			};
		};

	};
	audiolocker: locker {
		compatible = "amlogic, audiolocker";
		clocks = <&clkaudio CLKID_AUDIO_LOCKER_OUT
				&clkaudio CLKID_AUDIO_LOCKER_IN
				&clkaudio CLKID_AUDIO_MCLK_C
				&clkaudio CLKID_AUDIO_MCLK_D
				&clkc CLKID_FCLK_DIV2
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "lock_out", "lock_in", "out_src",
					"in_src", "out_calc", "in_ref";
		interrupts = <GIC_SPI 42 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "irq";
		frequency = <49000000>; /* pll */
		dividor = <49>; /* locker's parent */
		power-domains = <&pwrdm PDID_AUDIO>;
		status = "okay";
	};
	/* Audio Related end */

	gpio_keypad{
		compatible = "amlogic, gpio_keypad";
		status = "okay";
		scan_period = <20>;
		key_num = <1>;
		key_name = "power";
		key_code = <KEY_POWER>;
		key-gpios = <&gpio GPIOF_7 GPIO_ACTIVE_HIGH>;
		detect_mode = <0>;/*0:polling mode, 1:irq mode*/
	};

	adc_keypad {
		compatible = "amlogic, adc_keypad";
		status = "okay";
		key_name = "vol+", "vol-", "bt", "mode";
		key_num = <4>;
		io-channels = <&saradc 0>;
		io-channel-names = "key-chan-0";
		key_chan = <0 0 0 0>;
		key_code = <KEY_VOLUMEDOWN KEY_VOLUMEUP KEY_BLUETOOTH KEY_MODE>;
		key_val = <390 267 141 0>;
		key_tolerance = <40 40 40 40>;
	};
};

/* Audio Related start */
&audiobus {
	tdma: tdm@0 {
		compatible = "amlogic, a1-snd-tdma";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <0 1>;
		dai-tdm-lane-slot-mask-out = <1 0>;
		dai-tdm-clk-sel = <0>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_A
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "mclk", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdmout_a &tdmin_a>;
		power-domains = <&pwrdm PDID_AUDIO>;

		status = "okay";
	};

	tdmb: tdm@1 {
		compatible = "amlogic, a1-snd-tdmb";
		#sound-dai-cells = <0>;
		dai-tdm-lane-slot-mask-in = <1 0 0 0>;
		dai-tdm-lane-slot-mask-out = <1 0 0 0>;
		/* dai-tdm-lane-oe-slot-mask-in = <0 1>; */
		dai-tdm-clk-sel = <1>;
		clocks = <&clkaudio CLKID_AUDIO_MCLK_B
				&clkaudio CLKID_AUDIO_MCLK_PAD0
				&clkc CLKID_FCLK_DIV3>;
		clock-names = "mclk", "mclk_pad", "clk_srcpll";
		pinctrl-names = "tdm_pins";
		pinctrl-0 = <&tdmb_mclk &tdmout_b &tdm_clk_pins>;

		mclk_pad = <0>;  /* 0: mclk_0; 1: mclk_1 */

		/* tdmin data comes from ACODEC adc */
		tdmin-src-name = "acodec_adc";

		/*
		 * 0: tdmout_a;
		 * 1: tdmout_b;
		 * 2: tdmout_c;
		 * 3: spdifout;
		 * 4: spdifout_b;
		 */
		//samesource_sel = <3>;
		start_clk_enable = <1>;
		power-domains = <&pwrdm PDID_AUDIO>;

		src-clk-freq = <614400000>;

		status = "okay";
	};

	spdifa: spdif@0 {
		compatible = "amlogic, a1-snd-spdif-a";
		#sound-dai-cells = <0>;
		clocks = <&clkc CLKID_FCLK_DIV3
				&clkaudio CLKID_AUDIO_GATE_SPDIFIN
				&clkaudio CLKID_AUDIO_SPDIFIN>;
		clock-names = "fixed_clk", "gate_spdifin", "clk_spdifin";
		interrupts =
				<GIC_SPI 39 IRQ_TYPE_EDGE_RISING>;

		interrupt-names = "irq_spdifin";
		pinctrl-names = "spdif_pins";
		pinctrl-0 = <&spdifin>;
		power-domains = <&pwrdm PDID_AUDIO>;

		status = "okay";
	};

	pdm: pdm {
		compatible = "amlogic, a1-snd-pdm";
		#sound-dai-cells = <0>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_PDM
			&clkc CLKID_FCLK_DIV2
			&clkc CLKID_FCLK_DIV2
			&clkaudio CLKID_AUDIO2_PDM_DCLK
			&clkaudio CLKID_AUDIO2_PDM_SYSCLK>;
		clock-names = "gate",
			"sysclk_srcpll",
			"dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk";

		pinctrl-names = "pdm_pins";
		pinctrl-0 = <&pdmin>;

		/* mode 0~4, defalut:1 */
		filter_mode = <1>;
		sys-src-clk-freq = <614400000>;
		/*power-domains = <&pwrdm PDID_PDM>;*/

		status = "disabled";
	};

	asrca: resample@0 {
		compatible = "amlogic, a1-resample-a";
		clocks = <&clkc CLKID_FCLK_DIV3
			&clkaudio CLKID_AUDIO_MCLK_C
			&clkaudio CLKID_AUDIO_RESAMPLEA>;
		clock-names = "resample_pll", "resample_src", "resample_clk";

		/*same with toddr_src
		 *	TDMIN_A,    0
		 *	TDMIN_B,    1
		 *	TDMIN_C,    2
		 *	SPDIFIN,    3
		 *	PDMIN,      4
		 *	FRATV,      5
		 *	TDMIN_LB,   6
		 *	LOOPBACK_A, 7
		 *	FRHDMIRX,   8
		 *	LOOPBACK_B, 9
		 *	SPDIFIN_LB, 10
		 *	EARC_RX,    11
		 */
		resample_module = <3>;

		/* only can enable one new resample
		 * as only have one new resample HW
		 */
		status = "disabled";
	};

	asrcb: resample@1 {
		compatible = "amlogic, a1-resample-b";
		clocks = <&clkc CLKID_FCLK_DIV3
			&clkaudio CLKID_AUDIO_MCLK_D
			&clkaudio CLKID_AUDIO_RESAMPLEA>;
		clock-names = "resample_pll", "resample_src", "resample_clk";

		/*this resample is only used for loopback_A.*/
		/*only support 16000 or 48000Hz for capture*/
		capture_sample_rate = <16000>;

		/* hifi pll rate */
		src-clk-freq = <614400000>;

		status = "disabled";
	};

	vad:vad {
		compatible = "amlogic, snd-vad-top";
		#sound-dai-cells = <0>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_TOVAD
			/* &clkc CLKID_FCLK_DIV2 */
			&xtal
			&clkaudio CLKID_AUDIO2_VAD_CLK>;
		clock-names = "gate", "pll", "clk";

		interrupts = <GIC_SPI 117 IRQ_TYPE_EDGE_RISING
				GIC_SPI 118 IRQ_TYPE_EDGE_RISING>;
		interrupt-names = "irq_wakeup", "irq_frame_sync";

		/*
		 * Data src sel:
		 * 2: tdmin_c, actually tdmin_vad
		 * 4: pdmin
		 */
		src = <4>;

		/*
		 * deal with hot word in user space or kernel space
		 * 0: in user space
		 * 1: in kernel space
		 */
		level = <1>;

		status = "disabled";
	};

	loopback: loopback {
		compatible = "amlogic, a1-loopbacka";
		#sound-dai-cells = <0>;

		original-src = <&tdmb>;
		//tdmin_lb-src = <&tdmin_lb>;

		clocks = <&clkaudio CLKID_AUDIO2_GATE_PDM
			&clkc CLKID_FCLK_DIV2
			&clkc CLKID_FCLK_DIV2
			&clkaudio CLKID_AUDIO2_PDM_DCLK
			&clkaudio CLKID_AUDIO2_PDM_SYSCLK
			&clkc CLKID_FCLK_DIV3
			&clkaudio CLKID_AUDIO_MCLK_C>;
		clock-names = "pdm_gate",
			"pdm_sysclk_srcpll",
			"pdm_dclk_srcpll",
			"pdm_dclk",
			"pdm_sysclk",
			"tdminlb_mpll",
			"tdminlb_mclk";

		/* datain src
		 * 0: tdmin_a;
		 * 1: tdmin_b;
		 * 2: tdmin_c;
		 * 3: spdifin;
		 * 4: pdmin;
		 */
		datain_src = <4>;
		datain_chnum = <2>;
		datain_chmask = <0x3>;
		/* config which data pin for loopback */
		datain-lane-mask-in = <1 0 0 0>;

		sys-src-clk-freq = <614400000>;

		/* calc mclk for datalb */
		mclk-fs = <256>;

		/* tdmin_lb src
		 * 0: tdmoutA
		 * 1: tdmoutB
		 * 2: tdmoutC
		 * 3: PAD_TDMINA_DIN*, refer to core pinmux
		 * 4: PAD_TDMINB_DIN*, refer to core pinmux
		 * 5: PAD_TDMINC_DIN*, refer to core pinmux
		 * 6: PAD_TDMINA_D*, oe, refer to core pinmux
		 * 7: PAD_TDMINB_D*, oe, refer to core pinmux
		 */
		/* if tdmin_lb >= 3, use external loopback */
		datalb_src = <1>;
		datalb_chnum = <2>;
		datalb_chmask = <0x3>;
		/* config which data pin as loopback */
		datalb-lane-mask-in = <1 0 0 0>;
		power-domains = <&pwrdm PDID_AUDIO>;

		status = "okay";
	};

	aed:effect {
		compatible = "amlogic, snd-effect-v3";
		#sound-dai-cells = <0>;
		clocks = <&clkaudio CLKID_AUDIO_GATE_EQDRC
			&clkc CLKID_FCLK_DIV3
			&clkaudio CLKID_AUDIO_EQDRC>;
		clock-names = "gate", "srcpll", "eqdrc";
		/*
		 * 0:tdmout_a
		 * 1:tdmout_b
		 * 2:tdmout_c
		 * 3:spdifout
		 * 4:spdifout_b
		 */
		eqdrc_module = <1>;
		/* max 0xf, each bit for one lane, usually one lane */
		lane_mask = <0x1>;
		/* max 0xff, each bit for one channel */
		channel_mask = <0x3>;
		power-domains = <&pwrdm PDID_AUDIO>;
		status = "okay";
	};
}; /* end of audiobus */
/* Audio Related end */

&pinctrl_audio {
	tdm_clk_pins: tdm_clk_pins{
		mux {
			groups = "tdm_sclk1", "tdm_lrclk1";
			function = "tdm_clk_outb";
		};
	};
};

&pinctrl_periphs {
	/* Audio Related start */
	tdmout_a: tdmout_a {
		mux { /* GPIOX_10, GPIOX_9, GPIOX_8 */
			groups = "tdm_a_sclk",
				"tdm_a_fs",
				"tdm_a_dout0";
			function = "tdm_a";
		};
	};

	tdmin_a: tdmin_a {
		mux { /* GPIOX_7 */
			groups = "tdm_a_din1";
			function = "tdm_a";
		};
	};

	tdmb_mclk: tdmb_mclk {
		mux {
			groups = "mclk_0";
			function = "mclk_0";
			drive-strength = <2>;
		};
	};

	tdmout_b: tdmout_b {
		mux { /* GPIOA_1, GPIOA_2, GPIOA_3 */
			groups = "tdm_b_sclk",
				"tdm_b_fs",
				"tdm_b_dout0";
			function = "tdm_b";
			drive-strength = <2>;
		};
	};

	tdmin_b:tdmin_b {
		mux { /* GPIOA_7 */
			groups = "tdm_b_din0";
			function = "tdm_b";
			drive-strength = <2>;
		};
	};

	spdifin: spdifin {
		mux {/* GPIOF_6 */
			groups = "spdif_in_f6";
			function = "spdif_in";
		};
	};

	pdmin: pdmin {
		mux { /* GPIOA_7, GPIOA_8, GPIOA_9 */
			groups =
				"pdm_din1_a",
				"pdm_din0_a",
				"pdm_dclk";
			function = "pdm";
		};
	};

	/* Audio Related end */

}; /* end of pinctrl_periphs */

&uart_B {
	status = "okay";
};

&spifc {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spifc_pins>;
	spi-nor@1 {
		reg = <1>;
		compatible = "jedec,spi-nor";
		spi-max-frequency = <16000000>;
	};
	spi-nand@0 {
		compatible = "spi-nand";
		status = "okay";
		reg = <0>;
		spi-max-frequency = <96000000>;
		spi-tx-bus-width = <4>;
		spi-rx-bus-width = <4>;
		env_size = <8192>;
		bl_mode = <1>;
		fip_copies = <4>;
		fip_size = <0x200000>;
		partition = <&partitions>;
		partitions: partitions{
			bootloader{
				offset=<0x0 0x0>;
				size=<0x0 0x0>;
			};
			tpl{
				offset=<0x0 0x0>;
				size=<0x0 0x0>;
			};
			misc{
				offset=<0x0 0x0>;
				size=<0x0 0x40000>;
			};
			recovery{
				offset=<0x0 0x0>;
				size=<0x0 0x1000000>;
			};
			boot{
				offset=<0x0 0x0>;
				size=<0x0 0xc00000>;
			};
			system{
				offset=<0x0 0x0>;
				size=<0x0 0x3800000>;
			};
			data{
				offset=<0xffffffff 0xffffffff>;
				size=<0x0 0x0>;
			};
		};
	};
};

&cpu0 {
	cpu-supply = <&vddcpu0>;
};

&cpu1 {
	cpu-supply = <&vddcpu0>;
};

&pwm_ef {
	status = "okay";
};

&meson_suspend {
	status = "okay";
};

&vddcpu0 {
	pinctrl-names = "default";
	pinctrl-0 = <&pwm_f_pins4>;
	pwms = <&pwm_ef MESON_PWM_1 1500 0>;
	status = "okay";
};

&dwc2_a {
	status = "okay";
	/** 0: normal, 1: otg+dwc3 host only, 2: otg+dwc3 device only*/
	controller-type = <1>;
};

&dwc3 {
	status = "okay";
};

&usb2_phy_v2 {
	status = "okay";
	portnum = <1>;
};

&usb3_phy_v2 {
	status = "okay";
	portnum = <0>;
	otg = <0>;
};

&aml_bt {
	status = "disabled";
	//hostwake-gpios = <&gpio       GPIOP_0       GPIO_ACTIVE_HIGH>;

};

&wifi_pwm_conf {
	pwm_channel1_conf {
		pwms = <&pwm_ef MESON_PWM_0 30541 0>;
		duty-cycle = <15270>;
		times = <10>;
	};
	pwm_channel2_conf {
		pwms = <&pwm_ef MESON_PWM_2 30500 0>;
		duty-cycle = <15250>;
		times = <12>;
	};
};

&aml_wifi {
	status = "disabled";
	//interrupt-gpios = <&gpio       GPIOP_1       GPIO_ACTIVE_HIGH>;
	//pinctrl-0 = <&pwm_e_pins1>;
};

&sd_emmc_a {
	status = "disabled";
	pinctrl-0 = <&sdio_pins>;
	pinctrl-1 = <&sdio_clk_gate_pins>;
	pinctrl-names = "default", "clk-gate";
	bus-width = <4>;
	cap-sd-highspeed;
//	sd-uhs-sdr12;
//	sd-uhs-sdr25;
//	sd-uhs-sdr50;
//	sd-uhs-sdr104;
	non-removable;
	max-frequency = <200000000>;
	disable-wp;
	cap-sdio-irq;
	keep-power-in-suspend;
	card_type = <3>;

	vmmc-supply = <&vcc_3v3>;
	vqmmc-supply = <&vcc_1v8>;
};

&saradc {
	status = "okay";
	vref-supply = <&avddao_1v8>;
};

&spicc0 {
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&spicc0_pins_a>;
	cs-gpios = <&gpio GPIOA_8 0>;
};

&pwm_ab {
	status = "disabled";
};

&uart_C {
	status = "okay";
	pinctrl-0 = <&c_uart_pins2>;
};

&ir {
	status = "okay";
};

&i2c0 {
	status = "okay";
	pinctrl-names="default";
	pinctrl-0=<&i2c0_master_pins2>;
	clock-frequency = <100000>; /* default 100k */
};

&i2c1 {
	status = "okay";
	pinctrl-names="default";
	pinctrl-0=<&i2c1_master_pins2>;
	clock-frequency = <100000>; /* default 100k */
	ad82128_b_31: ad82128_b_31@31 {
		compatible = "ESMT,ad82128";
		#sound-dai-cells = <0>;
		reg = <0x31>;
		status = "okay";
		reset_pin = <&gpio GPIOP_12 GPIO_ACTIVE_HIGH>;
	};
};

&i2c3 {
	status = "okay";
	pinctrl-names="default";
	pinctrl-0=<&i2c3_master_pins2>;
	clock-frequency = <100000>; /* default 100k */
};

&custom_maps{
		mapnum = <4>;
		map0 = <&map_0>;
		map1 = <&map_1>;
		map2 = <&map_2>;
		map3 = <&map_3>;
		map_0: map_0{
			mapname = "amlogic-remote-1";
			customcode = <0xfb04>;
			release_delay = <80>;
			size  = <50>;   /*keymap size*/
			keymap = <REMOTE_KEY(0x47, KEY_0)
				REMOTE_KEY(0x13, KEY_1)
				REMOTE_KEY(0x10, KEY_2)
				REMOTE_KEY(0x11, KEY_3)
				REMOTE_KEY(0x0F, KEY_4)
				REMOTE_KEY(0x0C, KEY_5)
				REMOTE_KEY(0x0D, KEY_6)
				REMOTE_KEY(0x0B, KEY_7)
				REMOTE_KEY(0x08, KEY_8)
				REMOTE_KEY(0x09, KEY_9)
				REMOTE_KEY(0x5C, KEY_RIGHTCTRL)
				REMOTE_KEY(0x51, KEY_F3)
				REMOTE_KEY(0x50, KEY_F4)
				REMOTE_KEY(0x40, KEY_F5)
				REMOTE_KEY(0x4d, KEY_F6)
				REMOTE_KEY(0x43, KEY_F7)
				REMOTE_KEY(0x17, KEY_F8)
				REMOTE_KEY(0x00, KEY_F9)
				REMOTE_KEY(0x01, KEY_F10)
				REMOTE_KEY(0x16, KEY_F11)
				REMOTE_KEY(0x49, KEY_BACKSPACE)
				REMOTE_KEY(0x06, KEY_PROPS)
				REMOTE_KEY(0x14, KEY_UNDO)
				REMOTE_KEY(0x44, KEY_UP)
				REMOTE_KEY(0x1D, KEY_DOWN)
				REMOTE_KEY(0x1C, KEY_LEFT)
				REMOTE_KEY(0x48, KEY_RIGHT)
				REMOTE_KEY(0x53, KEY_LEFTMETA)
				REMOTE_KEY(0x45, KEY_PAGEUP)
				REMOTE_KEY(0x19, KEY_PAGEDOWN)
				REMOTE_KEY(0x52, KEY_PAUSE)
				REMOTE_KEY(0x05, KEY_HANGEUL)
				REMOTE_KEY(0x59, KEY_HANJA)
				REMOTE_KEY(0x1b, KEY_SCALE)
				REMOTE_KEY(0x04, KEY_KPCOMMA)
				REMOTE_KEY(0x1A, KEY_POWER)
				REMOTE_KEY(0x0A, KEY_TAB)
				REMOTE_KEY(0x0e, KEY_MUTE)
				REMOTE_KEY(0x1F, KEY_HOME)
				REMOTE_KEY(0x1e, KEY_FRONT)
				REMOTE_KEY(0x07, KEY_COPY)
				REMOTE_KEY(0x12, KEY_OPEN)
				REMOTE_KEY(0x54, KEY_PASTE)
				REMOTE_KEY(0x02, KEY_FIND)
				REMOTE_KEY(0x4f, KEY_A)
				REMOTE_KEY(0x42, KEY_B)
				REMOTE_KEY(0x5d, KEY_C)
				REMOTE_KEY(0x4c, KEY_D)
				REMOTE_KEY(0x58, KEY_CUT)
				REMOTE_KEY(0x55, KEY_CALC)>;
		};
		map_1: map_1{
			mapname = "amlogic-remote-2";
			customcode = <0xfe01>;
			release_delay = <80>;
			size  = <52>;
			keymap = <
				REMOTE_KEY(0x10, 200) /* power */
				REMOTE_KEY(0x1f, 201) /* eject-->input source */
				REMOTE_KEY(0x01, 202) /* usb */
				REMOTE_KEY(0x02, 203) /* bt */
				REMOTE_KEY(0x03, 204) /* aux */
				REMOTE_KEY(0x04, 205) /* scan-->hdmi arc */
				REMOTE_KEY(0x05, 206) /* spdif */
				REMOTE_KEY(0x06, 207) /* hdmi1 */
				REMOTE_KEY(0x07, 208) /* hdmi2 */
				REMOTE_KEY(0x17, 209) /* mute */
				REMOTE_KEY(0x0c, 210) /* vol+ */
				REMOTE_KEY(0x0d, 211) /* vol- */
				REMOTE_KEY(0x53, 212) /* DAP */
				REMOTE_KEY(0x52, 213) /* BM */
				REMOTE_KEY(0x49, 214) /* DRC */
				REMOTE_KEY(0x46, 215) /* POST */
				REMOTE_KEY(0x58, 216) /* UPMIX */
				REMOTE_KEY(0x5a, 217) /* VIRT */
				REMOTE_KEY(0x39, 218) /* VLAMP */
				REMOTE_KEY(0x40, 219) /* HFILT */
				REMOTE_KEY(0x42, 220) /* Loundness */
				REMOTE_KEY(0x1e, 221) /* VMCAL/cspread */
				REMOTE_KEY(0xb1, 222) /* CD */
				REMOTE_KEY(0xb4, 223) /* CD */
				REMOTE_KEY(0xb9, 224) /* CD */
				REMOTE_KEY(0x08, 225) /* loop */
				REMOTE_KEY(0x91, 226) /* CD */
				REMOTE_KEY(0x92, 227) /* CD */
				REMOTE_KEY(0x89, 228) /* CD */
				REMOTE_KEY(0x88, 229) /* CD */
				REMOTE_KEY(0x59, 230) /* Audio_info */
				REMOTE_KEY(0x84, 231) /* CD */
				REMOTE_KEY(0x1c, 232) /* DRC X+0.1 */
				REMOTE_KEY(0x1b, 233) /* DRC X-0.1 */
				REMOTE_KEY(0x19, 234) /* up/DRC Y+0.1 */
				REMOTE_KEY(0x1a, 235) /* down/DRC Y-0.1 */
				REMOTE_KEY(0xa0, 236) /* CD */
				REMOTE_KEY(0x0b, 237) /* Soft mute */
				REMOTE_KEY(0x0f, 238) /* soft vol- */
				REMOTE_KEY(0x0e, 239) /* soft vol+ */
				REMOTE_KEY(0x11, 240) /* Resume */
				REMOTE_KEY(0x57, 241) /* Pause */
				REMOTE_KEY(0x44, 242) /* LEGACY */
				REMOTE_KEY(0xa7, 243) /* CD */
				REMOTE_KEY(0x09, 244) /* random */
				REMOTE_KEY(0x00, 245) /* dtsx direct mode */
				REMOTE_KEY(0x0a, 246) /* dtsx drc  */
				REMOTE_KEY(0x5b, 247) /* dtsx imax  */
				REMOTE_KEY(0x13, 248) /* dtsx dialog gain  */
				REMOTE_KEY(0x41, 249) /* dtsx dialog norm  */
				REMOTE_KEY(0x43, 250) /* dtsx spkrout */
				REMOTE_KEY(0x15, 251) /* pcm surround effect */
				>;
		};
		map_2: map_2{
			mapname = "amlogic-remote-3";
			customcode = <0xbd02>;
			release_delay = <80>;
			size  = <17>;
			keymap = <REMOTE_KEY(0xca,103)
			REMOTE_KEY(0xd2,108)
			REMOTE_KEY(0x99,105)
			REMOTE_KEY(0xc1,106)
			REMOTE_KEY(0xce,97)
			REMOTE_KEY(0x45,116)
			REMOTE_KEY(0xc5,133)
			REMOTE_KEY(0x80,113)
			REMOTE_KEY(0xd0,15)
			REMOTE_KEY(0xd6,125)
			REMOTE_KEY(0x95,102)
			REMOTE_KEY(0xdd,104)
			REMOTE_KEY(0x8c,109)
			REMOTE_KEY(0x89,131)
			REMOTE_KEY(0x9c,130)
			REMOTE_KEY(0x9a,120)
			REMOTE_KEY(0xcd,121)>;
		};
		map_3: map_3{
			mapname = "amlogic-remote-3";
			customcode = <0xa4e8>; /* Reference Remote Control */
			release_delay = <80>;
			size  = <45>;
			keymap = <
				REMOTE_KEY(0xc7, 200) /* power */
				REMOTE_KEY(0x93, 201) /* eject-->input source */
				REMOTE_KEY(0xb2, 202) /* usb */
				REMOTE_KEY(0xb8, 203) /* bt */
				REMOTE_KEY(0xb7, 204) /* aux */
				REMOTE_KEY(0x8a, 205) /* scan-->hdmi arc */
				REMOTE_KEY(0x96, 206) /* spdif */
				REMOTE_KEY(0x90, 207) /* hdmi1 */
				REMOTE_KEY(0xa8, 208) /* hdmi2 */
				REMOTE_KEY(0x85, 209) /* mute */
				REMOTE_KEY(0x80, 210) /* vol+ */
				REMOTE_KEY(0x81, 211) /* vol- */
				REMOTE_KEY(0x61, 212) /* DAP */
				REMOTE_KEY(0x62, 213) /* BM */
				REMOTE_KEY(0x63, 214) /* DRC */
				REMOTE_KEY(0x64, 215) /* POST */
				REMOTE_KEY(0x65, 216) /* UPMIX */
				REMOTE_KEY(0x66, 217) /* VIRT */
				REMOTE_KEY(0x67, 218) /* VLAMP */
				REMOTE_KEY(0x68, 219) /* HFILT */
				REMOTE_KEY(0x69, 220) /* Loundness */
				REMOTE_KEY(0x60, 221) /* VMCAL/cspread */
				REMOTE_KEY(0xb1, 222) /* CD */
				REMOTE_KEY(0xb4, 223) /* CD */
				REMOTE_KEY(0xb9, 224) /* CD */
				REMOTE_KEY(0xab, 225) /* loop */
				REMOTE_KEY(0x91, 226) /* CD */
				REMOTE_KEY(0x92, 227) /* CD */
				REMOTE_KEY(0x89, 228) /* CD */
				REMOTE_KEY(0x88, 229) /* CD */
				REMOTE_KEY(0xa5, 230) /* Audio_info */
				REMOTE_KEY(0x84, 231) /* CD */
				REMOTE_KEY(0x72, 232) /* DRC X+0.1 */
				REMOTE_KEY(0x73, 233) /* DRC X-0.1 */
				REMOTE_KEY(0x9a, 234) /* up/DRC Y+0.1 */
				REMOTE_KEY(0x9b, 235) /* down/DRC Y-0.1 */
				REMOTE_KEY(0xa0, 236) /* CD */
				REMOTE_KEY(0x71, 237) /* Soft mute */
				REMOTE_KEY(0x74, 238) /* soft vol- */
				REMOTE_KEY(0x75, 239) /* soft vol+ */
				REMOTE_KEY(0x7e, 240) /* Resume */
				REMOTE_KEY(0x7f, 241) /* Pause */
				REMOTE_KEY(0x7a, 242) /* LEGACY */
				REMOTE_KEY(0xa7, 243) /* CD */
				REMOTE_KEY(0xa9, 244) /* random */
				>;
		};
};
